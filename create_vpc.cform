{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates a VPC with an Internet Gateway, NAT Gateway in 3 public subnets, and N private subnets N = [0 ... 6]",
    "Parameters" : {
        "CidrAddress" : {
            "Default" : "171.56",
            "Description" : "Initial two values for CIDR address for the VPC, which will be expanded X.Y.0.0/16",
            "Type" : "String",
            "MinLength" : "3",
            "MaxLength" : "7",
            "AllowedPattern" : "[0-9]?[0-9]?[0-9]\\.[0-9]?[0-9]?[0-9]",
            "ConstraintDescription" : "Must create a valid CIDR"
        },
        "CreatePublicSubnet" : {
            "Default" : "false",
            "Description" : "Whether a public (internet facing) subnet should be created",
            "Type" : "String",
            "AllowedValues" : ["true", "false"]
        },
        "EnableDnsHostnames" : {
            "Default" : "false",
            "Description" : "Whether or not DNS hostnames will be created",
            "Type" : "String",
            "AllowedValues" : ["true", "false"]
        },
        "EnableDnsSupport" : {
            "Default" : "true",
            "Description" : "Whether or not DNS is supported",
            "Type" : "String",
            "AllowedValues" : ["true", "false"]
        },
        "EnableFlowLogs" : {
            "Default" : "false",
            "Description" : "Whether or not FlowLogs should be created",
            "Type" : "String",
            "AllowedValues" : ["true", "false"]
        },
        "FlowLogCoverage" : {
            "Description" : "If using FlowLogs, which resources should be covered",
            "Default" : "ALL",
            "Type" : "String",
            "AllowedValues" : ["ALL", "VPC", "VPC+PublicSubnet", "VPC+PrivateSubnet" ]
        },
        "FlowLogRetention" : {
            "Description" : "If using FlowLogs, the number of days to retain logs",
            "Default" : "30",
            "Type" : "Number",
            "AllowedValues" : ["1", "3", "5", "7", "14", "30", "60", "90", "120", "150", "180", "365", "400", "545", "731", "1827", "3653"]
        },
        "FlowLogTrafficType" : {
            "Description" : "If using FlowLogs, the type of traffic to log",
            "Default" : "ALL",
            "Type" : "String",
            "AllowedValues" : ["ACCEPT", "REJECT", "ALL"]
        },
        "InstanceTenancy" : {
            "Default" : "default",
            "Description" : "Type of instance tenancy",
            "Type" : "String",
            "AllowedValues" : ["default", "dedicated"]
        },
        "MultipleNATGateways" : {
            "Default" : "false",
            "Description" : "Whether a NAT Gateway should be created in each public subnet, with multiple private Route Tables",
            "Type" : "String",
            "AllowedValues" : ["true", "false"]
        },
        "PrivateSubnetCount" : {
            "Default" : "1",
            "Description" : "Number of private subnets to create in the VPC",
            "Type" : "Number",
            "AllowedValues" : ["0","1","2","3","4","5","6"],
            "ConstraintDescription" : "Must be between 0 and 6"
        },
        "VPCName" : {
            "Default" : "",
            "Description" : "Optional name to assign to the 'Name' tag of the VPC - if omitted then the StackName is used",
            "Type" : "String"
        },
        "VPCRole" : {
            "Default" : "",
            "Description" : "Optional role to assigned to the 'Role' tag of the VPC - if omitted then '' is used",
            "Type" : "String"
        }
	},
    "Conditions" : {
        "VPCNameNotProvided" : { "Fn::Equals" : [ { "Ref" : "VPCName" }, "" ] },
        "1SubnetRequested" : { "Fn::Equals" : [ { "Ref" : "PrivateSubnetCount" }, "1" ] },
        "2SubnetsRequested" : { "Fn::Equals" : [ { "Ref" : "PrivateSubnetCount" }, "2" ] },
        "3SubnetsRequested" : { "Fn::Equals" : [ { "Ref" : "PrivateSubnetCount" }, "3" ] },
        "4SubnetsRequested" : { "Fn::Equals" : [ { "Ref" : "PrivateSubnetCount" }, "4" ] },
        "5SubnetsRequested" : { "Fn::Equals" : [ { "Ref" : "PrivateSubnetCount" }, "5" ] },
        "6SubnetsRequested" : { "Fn::Equals" : [ { "Ref" : "PrivateSubnetCount" }, "6" ] },
        "CreateFlowLogs" : { "Fn::Equals" : [ { "Ref" : "EnableFlowLogs" }, "true" ] },
        "CreateAllFlowLogs" : { "Fn::Equals" : [ { "Ref" : "FlowLogCoverage" }, "ALL" ] },
        "CreatePublicSubnetFlowLog" : { "Fn::Equals" : [ { "Ref" : "FlowLogCoverage" }, "VPC+PublicSubnet" ] },
        "CreatePrivateSubnetFlowLog" : { "Fn::Equals" : [ { "Ref" : "FlowLogCoverage" }, "VPC+PrivateSubnet" ] },
        "CreateSingleNATGateway" : { "Fn::Equals" : [ { "Ref" : "MultipleNATGateways" }, "false" ] },
        "CreateMultipleNATGateways" : { "Fn::Equals" : [ { "Ref" : "MultipleNATGateways" }, "true" ] },
        "CreatePublicSubnet" : { "Fn::Equals" : [ { "Ref" : "CreatePublicSubnet" }, "true" ] },
        "CreateSubnet1" : { "Fn::Or" : [ 
            { "Condition" : "1SubnetRequested" },
            { "Condition" : "2SubnetsRequested" },
            { "Condition" : "3SubnetsRequested" },
            { "Condition" : "4SubnetsRequested" },
            { "Condition" : "5SubnetsRequested" },
            { "Condition" : "6SubnetsRequested" }
         ] },
        "CreateSubnet2" : { "Fn::Or" : [ 
            { "Condition" : "2SubnetsRequested" },
            { "Condition" : "3SubnetsRequested" },
            { "Condition" : "4SubnetsRequested" },
            { "Condition" : "5SubnetsRequested" },
            { "Condition" : "6SubnetsRequested" }
         ] },
        "CreateSubnet3" : { "Fn::Or" : [ 
            { "Condition" : "3SubnetsRequested" },
            { "Condition" : "4SubnetsRequested" },
            { "Condition" : "5SubnetsRequested" },
            { "Condition" : "6SubnetsRequested" }
         ] },
        "CreateSubnet4" : { "Fn::Or" : [ 
            { "Condition" : "4SubnetsRequested" },
            { "Condition" : "5SubnetsRequested" },
            { "Condition" : "6SubnetsRequested" }
         ] },
        "CreateSubnet5" : { "Fn::Or" : [ 
            { "Condition" : "5SubnetsRequested" },
            { "Condition" : "6SubnetsRequested" }
         ] },
        "CreateSubnet6" : { "Fn::Or" : [ 
            { "Condition" : "6SubnetsRequested" },
            { "Condition" : "6SubnetsRequested" }
         ] },
         "CreatePrivateSubnet" :  { "Fn::Or" : [
            { "Condition" : "CreateSubnet1" },
            { "Condition" : "CreateSubnet2" },
            { "Condition" : "CreateSubnet3" },
            { "Condition" : "CreateSubnet4" },
            { "Condition" : "CreateSubnet5" },
            { "Condition" : "CreateSubnet6" }
        ] },
        "CreatePublicSubnetAndSingleGateway" : { "Fn::And" : [
            { "Condition" : "CreatePublicSubnet" },
            { "Condition" : "CreatePrivateSubnet" },
            { "Condition" : "CreateSingleNATGateway" }
        ] },
        "CreatePublicSubnetAndMultipleGateways" : { "Fn::And" : [
            { "Condition" : "CreatePublicSubnet" },
            { "Condition" : "CreatePrivateSubnet" },
            { "Condition" : "CreateMultipleNATGateways" }
        ] },
        "CreatePublicFlowLogs" : { "Fn::And" : [
            { "Condition" : "CreateFlowLogs" },
            { "Condition" : "CreatePublicSubnet" },
            {
                "Fn::Or" : [
                    { "Condition" : "CreateAllFlowLogs" },
                    { "Condition" : "CreatePublicSubnetFlowLog" }
                ]
            }
        ] },
        "CreatePrivateFlowLogs" : { "Fn::And" : [
            { "Condition" : "CreateFlowLogs" },
            { "Condition" : "CreatePrivateSubnet" },
            {
                "Fn::Or" : [
                    { "Condition" : "CreateAllFlowLogs" },
                    { "Condition" : "CreatePrivateSubnetFlowLog" }
                ]
            }
        ] },
        "CreatePrivateSubnet1FlowLog" : { "Fn::And" : [
            { "Condition" : "CreatePrivateFlowLogs" },
            { "Condition" : "CreateSubnet1" }
        ] },
        "CreatePrivateSubnet2FlowLog" : { "Fn::And" : [
            { "Condition" : "CreatePrivateFlowLogs" },
            { "Condition" : "CreateSubnet2" }
        ] },
        "CreatePrivateSubnet3FlowLog" : { "Fn::And" : [
            { "Condition" : "CreatePrivateFlowLogs" },
            { "Condition" : "CreateSubnet3" }
        ] },
        "CreatePrivateSubnet4FlowLog" : { "Fn::And" : [
            { "Condition" : "CreatePrivateFlowLogs" },
            { "Condition" : "CreateSubnet4" }
        ] },
        "CreatePrivateSubnet5FlowLog" : { "Fn::And" : [
            { "Condition" : "CreatePrivateFlowLogs" },
            { "Condition" : "CreateSubnet5" }
        ] },
        "CreatePrivateSubnet6FlowLog" : { "Fn::And" : [
            { "Condition" : "CreatePrivateFlowLogs" },
            { "Condition" : "CreateSubnet6" }
        ] },
        "AttachSubnet1ToSinglePrivateRouteTable" : { "Fn::And" : [
            { "Condition" : "CreateSubnet1" },
            { "Condition" : "CreateSingleNATGateway" }
        ] },
        "AttachSubnet1ToRouteTable1" : { "Fn::And" : [
            { "Condition" : "CreateSubnet1" },
            { "Condition" : "CreateMultipleNATGateways" }
        ] },
        "AttachSubnet2ToSinglePrivateRouteTable" : { "Fn::And" : [
            { "Condition" : "CreateSubnet2" },
            { "Condition" : "CreateSingleNATGateway" }
        ] },
        "AttachSubnet2ToRouteTable2" : { "Fn::And" : [
            { "Condition" : "CreateSubnet2" },
            { "Condition" : "CreateMultipleNATGateways" }
        ] },
        "AttachSubnet3ToSinglePrivateRouteTable" : { "Fn::And" : [
            { "Condition" : "CreateSubnet3" },
            { "Condition" : "CreateSingleNATGateway" }
        ] },
        "AttachSubnet3ToRouteTable3" : { "Fn::And" : [
            { "Condition" : "CreateSubnet3" },
            { "Condition" : "CreateMultipleNATGateways" }
        ] },
        "AttachSubnet4ToSinglePrivateRouteTable" : { "Fn::And" : [
            { "Condition" : "CreateSubnet4" },
            { "Condition" : "CreateSingleNATGateway" }
        ] },
        "AttachSubnet4ToRouteTable1" : { "Fn::And" : [
            { "Condition" : "CreateSubnet4" },
            { "Condition" : "CreateMultipleNATGateways" }
        ] },
        "AttachSubnet5ToSinglePrivateRouteTable" : { "Fn::And" : [
            { "Condition" : "CreateSubnet5" },
            { "Condition" : "CreateSingleNATGateway" }
        ] },
        "AttachSubnet5ToRouteTable2" : { "Fn::And" : [
            { "Condition" : "CreateSubnet5" },
            { "Condition" : "CreateMultipleNATGateways" }
        ] },
        "AttachSubnet6ToSinglePrivateRouteTable" : { "Fn::And" : [
            { "Condition" : "CreateSubnet6" },
            { "Condition" : "CreateSingleNATGateway" }
        ] },
        "AttachSubnet6ToRouteTable3" : { "Fn::And" : [
            { "Condition" : "CreateSubnet6" },
            { "Condition" : "CreateMultipleNATGateways" }
        ] }
    },
	"Resources" : {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".0.0/16"
                        ] 
                    ]
                },
                "EnableDnsHostnames": { "Ref" : "EnableDnsHostnames" },
                "EnableDnsSupport": { "Ref" : "EnableDnsSupport" },
                "InstanceTenancy": { "Ref" : "InstanceTenancy" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { 
                            "Fn::If" : [
                                "VPCNameNotProvided",
                                { "Ref": "AWS::StackName" },
                                { "Ref" : "VPCName" }
                            ]
                        }
                    },
                    {
                        "Key": "Role",
                        "Value": { "Ref": "VPCRole" }
                    }
                ]
            }
        },
        "FlowLogRole": {
            "Type": "AWS::IAM::Role",
            "Condition" : "CreateFlowLogs",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "VPCLogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreateFlowLogs",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "VPC-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "VPCFlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreateFlowLogs",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "VPCLogGroup" },
                "ResourceId" : { "Ref" : "VPC" },
                "ResourceType" : "VPC",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "InternetGateway" : {
            "Type": "AWS::EC2::InternetGateway",
            "Condition" : "CreatePublicSubnet"
        },
        "AttachInternetGatewayToVPC" : {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "VpcId" : { "Ref" : "VPC" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "0", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".255.0/26"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Public-1", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Public Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet1LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePublicFlowLogs",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PublicSubnet-1-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PublicSubnet1FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePublicFlowLogs",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PublicSubnet1LogGroup" },
                "ResourceId" : { "Ref" : "PublicSubnet1" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "1", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".255.64/26"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Public-2", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Public Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet2LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePublicFlowLogs",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PublicSubnet-2-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PublicSubnet2FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePublicFlowLogs",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PublicSubnet2LogGroup" },
                "ResourceId" : { "Ref" : "PublicSubnet2" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PublicSubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "2", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".255.128/26"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Public-3", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Public Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet3LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePublicFlowLogs",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PublicSubnet-3-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PublicSubnet3FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePublicFlowLogs",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PublicSubnet3LogGroup" },
                "ResourceId" : { "Ref" : "PublicSubnet3" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Public", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Public Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "RouteTableId": { "Ref": "PublicSubnetRouteTable" },
                "SubnetId": { "Ref": "PublicSubnet1" }
            }
        },
        "PublicSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "RouteTableId": { "Ref": "PublicSubnetRouteTable" },
                "SubnetId": { "Ref": "PublicSubnet2" }
            }
        },
        "PublicSubnet3RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "CreatePublicSubnet",
            "Properties": {
                "RouteTableId": { "Ref": "PublicSubnetRouteTable" },
                "SubnetId": { "Ref": "PublicSubnet3" }
            }
        },
        "PublicSubnetRouteToInternet" : {
            "Type": "AWS::EC2::Route",
            "Condition" : "CreatePublicSubnet",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicSubnetRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        "NATEIP" : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "CreatePublicSubnetAndSingleGateway",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "NATEIP1" : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "NATEIP2" : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "NATEIP3" : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "NAT" : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "CreatePublicSubnetAndSingleGateway",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : [ "NATEIP", "AllocationId" ] },
                "SubnetId" : { "Ref": "PublicSubnet1" }
            }
        },
        "NAT1" : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : [ "NATEIP1", "AllocationId" ] },
                "SubnetId" : { "Ref": "PublicSubnet1" }
            }
        },
        "NAT2" : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : [ "NATEIP2", "AllocationId" ] },
                "SubnetId" : { "Ref": "PublicSubnet2" }
            }
        },
        "NAT3" : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : [ "NATEIP3", "AllocationId" ] },
                "SubnetId" : { "Ref": "PublicSubnet3" }
            }
        },
        "PrivateSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Condition" : "CreatePrivateSubnet",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnetRouteTable2": {
            "Type": "AWS::EC2::RouteTable",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-2", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnetRouteTable3": {
            "Type": "AWS::EC2::RouteTable",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-3", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnetRouteToInternet" : {
            "Type": "AWS::EC2::Route",
            "Condition" : "CreatePublicSubnetAndSingleGateway",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateSubnetRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NAT" }
            }
        },
        "PrivateSubnetRouteToInternet1" : {
            "Type": "AWS::EC2::Route",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateSubnetRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NAT1" }
            }
        },
        "PrivateSubnetRouteToInternet2" : {
            "Type": "AWS::EC2::Route",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateSubnetRouteTable2" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NAT2" }
            }
        },
        "PrivateSubnetRouteToInternet3" : {
            "Type": "AWS::EC2::Route",
            "Condition" : "CreatePublicSubnetAndMultipleGateways",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateSubnetRouteTable3" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NAT3" }
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreateSubnet1",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "0", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".1.0/20"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-1", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet1LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePrivateSubnet1FlowLog",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PrivateSubnet-1-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PrivateSubnet1FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePrivateSubnet1FlowLog",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PrivateSubnet1LogGroup" },
                "ResourceId" : { "Ref" : "PrivateSubnet1" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet1ToSinglePrivateRouteTable",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet1" }
            }
        },
        "PrivateSubnet1RouteTableAssociationMultiRouteTables": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet1ToRouteTable1",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet1" }
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreateSubnet2",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "1", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".33.0/20"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-2", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet2LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePrivateSubnet2FlowLog",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PrivateSubnet-2-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PrivateSubnet2FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePrivateSubnet2FlowLog",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PrivateSubnet2LogGroup" },
                "ResourceId" : { "Ref" : "PrivateSubnet2" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PrivateSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet2ToSinglePrivateRouteTable",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet2" }
            }
        },
        "PrivateSubnet2RouteTableAssociationMultiRouteTables": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet2ToRouteTable2",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable2" },
                "SubnetId": { "Ref": "PrivateSubnet2" }
            }
        },
        "PrivateSubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreateSubnet3",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "2", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".65.0/20"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-3", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet3LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePrivateSubnet3FlowLog",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PrivateSubnet-3-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PrivateSubnet3FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePrivateSubnet3FlowLog",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PrivateSubnet3LogGroup" },
                "ResourceId" : { "Ref" : "PrivateSubnet3" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PrivateSubnet3RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet3ToSinglePrivateRouteTable",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet3" }
            }
        },
        "PrivateSubnet3RouteTableAssociationMultiRouteTables": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet3ToRouteTable3",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable3" },
                "SubnetId": { "Ref": "PrivateSubnet3" }
            }
        },
        "PrivateSubnet4": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreateSubnet4",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "3", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".97.0/20"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-4", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet4LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePrivateSubnet4FlowLog",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PrivateSubnet-4-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PrivateSubnet4FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePrivateSubnet4FlowLog",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PrivateSubnet4LogGroup" },
                "ResourceId" : { "Ref" : "PrivateSubnet4" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PrivateSubnet4RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet4ToSinglePrivateRouteTable",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet4" }
            }
        },
        "PrivateSubnet4RouteTableAssociationMultiRouteTables": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet4ToRouteTable1",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet4" }
            }
        },
        "PrivateSubnet5": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreateSubnet5",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "4", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".129.0/20"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-5", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet5LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePrivateSubnet5FlowLog",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PrivateSubnet-5-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PrivateSubnet5FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePrivateSubnet5FlowLog",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PrivateSubnet5LogGroup" },
                "ResourceId" : { "Ref" : "PrivateSubnet5" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PrivateSubnet5RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet5ToSinglePrivateRouteTable",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet5" }
            }
        },
        "PrivateSubnet5RouteTableAssociationMultiRouteTables": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet5ToRouteTable2",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable2" },
                "SubnetId": { "Ref": "PrivateSubnet5" }
            }
        },
        "PrivateSubnet6": {
            "Type": "AWS::EC2::Subnet",
            "Condition" : "CreateSubnet6",
            "Properties": {
                "AvailabilityZone": { 
                    "Fn::Select" : [ "5", 
                        {   "Fn::Split" : [ ",", 
                                {   "Fn::Join" : [ ",",
                                      [
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                                        { "Fn::Join" : [ ",", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
                                      ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Join" : [ "",
                        [
                            { "Ref" : "CidrAddress" },
                            ".161.0/20"
                        ] 
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub" : [ 
                                "${Name}-Private-6", {
                                    "Name" : {
                                        "Fn::If" : [
                                            "VPCNameNotProvided",
                                            { "Ref": "AWS::StackName" },
                                            { "Ref" : "VPCName" }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private Subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet6LogGroup" : {
            "Type" : "AWS::Logs::LogGroup",
            "Condition" : "CreatePrivateSubnet6FlowLog",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub" : [ "PrivateSubnet-6-${Name}", { "Name" : { "Ref" : "AWS::StackName" } } ] },
                "RetentionInDays" : { "Ref" : "FlowLogRetention" }
            }
        },
        "PrivateSubnet6FlowLog" : {
            "Type" : "AWS::EC2::FlowLog",
            "Condition" : "CreatePrivateSubnet6FlowLog",
            "Properties" : {
                "DeliverLogsPermissionArn" : { "Fn::GetAtt": [ "FlowLogRole", "Arn" ] },
                "LogGroupName" : { "Ref" : "PrivateSubnet6LogGroup" },
                "ResourceId" : { "Ref" : "PrivateSubnet6" },
                "ResourceType" : "Subnet",
                "TrafficType" : { "Ref" : "FlowLogTrafficType" }            
            }
        },
        "PrivateSubnet6RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet6ToSinglePrivateRouteTable",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable" },
                "SubnetId": { "Ref": "PrivateSubnet6" }
            }
        },
        "PrivateSubnet6RouteTableAssociationMultiRouteTables": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "AttachSubnet6ToRouteTable3",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateSubnetRouteTable3" },
                "SubnetId": { "Ref": "PrivateSubnet6" }
            }
        }
    },
    "Outputs" : {
        "PublicSubnets" : {
            "Description" : "The public subnets in the VPC",
            "Value" : {
                "Fn::If" : [
                    "CreatePublicSubnet",
                    { "Fn::Join" : [ ",",
                            [
                                { "Ref" : "PublicSubnet1" },
                                { "Ref" : "PublicSubnet2" },
                                { "Ref" : "PublicSubnet3" }
                            ]
                        ]
                    },
                    ""
                ]
            }
        },
        "PublicSubnetRouteTable" : {
            "Description" : "The route table of the public subnet in the VPC",
            "Value" : {
                "Fn::If" : [
                    "CreatePublicSubnet",
                    { "Ref" : "PublicSubnetRouteTable" },
                    ""
                ]
            }
        },
    	"VPC" : {
    		"Description" : "Reference to the VPC",
    		"Value" : { "Ref" : "VPC" }
    	},
        "CidrBlock": {
            "Description" : "The CIDR of the VPC",
            "Value" : {
                "Fn::Join" : [ "",
                    [
                        { "Ref" : "CidrAddress" },
                        ".0.0/16"
                    ] 
                ]
            }
        },        
        "PrivateSubnetRouteTable" : {
            "Description" : "The route table of the private subnets in the VPC",
            "Value" : {
                "Fn::If" : [
                    "CreatePublicSubnetAndMultipleGateways",
                    {
                        "Fn::Join" : [ ",",
                            [
                                { "Ref" : "PrivateSubnetRouteTable" },
                                { "Ref" : "PrivateSubnetRouteTable2" },
                                { "Ref" : "PrivateSubnetRouteTable3" }
                            ]
                        ]
                    },
                    {
                        "Fn::If" : [
                            "CreatePrivateSubnet",
                            { "Ref" : "PrivateSubnetRouteTable" },
                            ""
                        ]
                    }
                ]
            }
        },
        "PrivateSubnets" : {
            "Description" : "List of private subnets",
            "Value" : {
                "Fn::If" : [ 
                    "CreateSubnet6", 
                    {
                        "Fn::Join" : [ ",",
                            [
                                { "Ref" : "PrivateSubnet1" },
                                { "Ref" : "PrivateSubnet2" },
                                { "Ref" : "PrivateSubnet3" },
                                { "Ref" : "PrivateSubnet4" },
                                { "Ref" : "PrivateSubnet5" },
                                { "Ref" : "PrivateSubnet6" }
                            ]
                        ]
                    },
                    {
                        "Fn::If" : [ 
                            "CreateSubnet5", 
                            {
                                "Fn::Join" : [ ",",
                                    [
                                        { "Ref" : "PrivateSubnet1" },
                                        { "Ref" : "PrivateSubnet2" },
                                        { "Ref" : "PrivateSubnet3" },
                                        { "Ref" : "PrivateSubnet4" },
                                        { "Ref" : "PrivateSubnet5" }
                                    ]
                                ]
                            },
                            {
                                "Fn::If" : [ 
                                    "CreateSubnet4", 
                                    {
                                        "Fn::Join" : [ ",",
                                            [
                                                { "Ref" : "PrivateSubnet1" },
                                                { "Ref" : "PrivateSubnet2" },
                                                { "Ref" : "PrivateSubnet3" },
                                                { "Ref" : "PrivateSubnet4" }
                                            ]
                                        ]
                                    },
                                    {
                                        "Fn::If" : [ 
                                            "CreateSubnet3", 
                                            {
                                                "Fn::Join" : [ ",",
                                                    [
                                                        { "Ref" : "PrivateSubnet1" },
                                                        { "Ref" : "PrivateSubnet2" },
                                                        { "Ref" : "PrivateSubnet3" }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::If" : [ 
                                                    "CreateSubnet2", 
                                                    {
                                                        "Fn::Join" : [ ",",
                                                            [
                                                                { "Ref" : "PrivateSubnet1" },
                                                                { "Ref" : "PrivateSubnet2" }
                                                            ]
                                                        ]
                                                    },
                                                    {
                                                        "Fn::If" : [
                                                            "CreateSubnet1",
                                                            { "Ref" : "PrivateSubnet1" },
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            }                                    
                                        ]
                                    }                                    
                                ]
                            }
                        ]
                    }
                ]                
            }
        }
    }
}